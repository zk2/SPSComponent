image: anydasa/docker-git-compose

## TEMPLATES-START

.deploy_prod_template: &deploy_prod_script
  script:
    - eval $(/usr/bin/ssh-agent -s)
    - echo "$SSH_KEY" > /tmp/id_rsa && chmod 600 /tmp/id_rsa && /usr/bin/ssh-add /tmp/id_rsa
    - ssh -o StrictHostKeyChecking=no zeka@$SSH_HOST '
        cd /var/www/html/sps-component;
        git fetch;
        git checkout .;
        git checkout '$CI_COMMIT_REF_NAME';
        git pull origin '$CI_COMMIT_REF_NAME';
        docker login -u gitlab-ci-token -p '"$CI_JOB_TOKEN"' '"$CI_REGISTRY"';
        docker stop $(docker ps -qa);
        '$DOCKER_COMPOSE_PROD' pull;
        '$DOCKER_COMPOSE_PROD' up -d;
        '$DOCKER_COMPOSE_PROD' exec -T php composer install;
        '$DOCKER_COMPOSE_PROD' exec -T php vendor/bin/phpunit;
      '
## TEMPLATES-END

stages:
  - lint
  - test
  - deploy

cache:
  paths:
    - vendor/

variables:
  DOCKER_DRIVER: overlay
  DOCKER_COMPOSE_PROD: "docker-compose -f docker-compose.yml"

services:
  - docker:dind


lint_php:
  stage: lint
  except:
    - master
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - apk add --update py-pip && pip install docker-compose
    - $DOCKER_COMPOSE_PROD pull php
    - $DOCKER_COMPOSE_PROD up -d
    - docker-compose exec -T php composer install
    - >
      if files=$(git diff HEAD~ --name-only); then
        docker-compose exec -T php bin/phpcs $files
      fi;
#  allow_failure: true


test_phpunit:
  stage: test
  except:
    - master
  script:
    - apk add --update py-pip && pip install docker-compose
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - $DOCKER_COMPOSE_PROD pull
    - $DOCKER_COMPOSE_PROD up -d
    - docker-compose exec -T php composer install
    - $DOCKER_COMPOSE_PROD exec -T php bin/phpunit


deploy_prod:
  stage: deploy
  when: manual
  variables:
    SSH_HOST: $SSH_STAGE_HOST
  only:
    - master
  <<: *deploy_prod_script


deploy_dev:
  stage: deploy
  when: manual
  variables:
    SSH_HOST: $SSH_STAGE_HOST
  except:
    - master
  <<: *deploy_prod_script


deploy_stage:
  stage: deploy
  when: manual
  variables:
    SSH_HOST: $SSH_STAGE_HOST
  except:
    - master
  <<: *deploy_prod_script
